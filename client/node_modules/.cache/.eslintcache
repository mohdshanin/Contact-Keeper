[{"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\index.js":"1","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\App.js":"2","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\layout\\Navbar.jsx":"3","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\pages\\Home.jsx":"4","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\pages\\About.jsx":"5","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\contacts\\Contacts.jsx":"6","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\context\\contact\\ContactState.js":"7","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\context\\contact\\contactContext.js":"8","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\context\\contact\\contactReducer.js":"9","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\context\\types.js":"10","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\contacts\\ContactItem.jsx":"11","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\contacts\\ContactForm.jsx":"12","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\contacts\\ContactFilter.jsx":"13"},{"size":146,"mtime":1615482242296,"results":"14","hashOfConfig":"15"},{"size":758,"mtime":1616929622601,"results":"16","hashOfConfig":"15"},{"size":620,"mtime":1617358690769,"results":"17","hashOfConfig":"15"},{"size":422,"mtime":1617382336929,"results":"18","hashOfConfig":"15"},{"size":322,"mtime":1615546375749,"results":"19","hashOfConfig":"15"},{"size":726,"mtime":1617383105918,"results":"20","hashOfConfig":"15"},{"size":2383,"mtime":1617427427981,"results":"21","hashOfConfig":"15"},{"size":117,"mtime":1615626970990,"results":"22","hashOfConfig":"15"},{"size":1609,"mtime":1617426984683,"results":"23","hashOfConfig":"15"},{"size":506,"mtime":1617424027116,"results":"24","hashOfConfig":"15"},{"size":1989,"mtime":1617381341233,"results":"25","hashOfConfig":"15"},{"size":2773,"mtime":1617413530353,"results":"26","hashOfConfig":"15"},{"size":1545,"mtime":1617427624317,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"c5sa9v",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\index.js",[],["56","57"],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\App.js",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\layout\\Navbar.jsx",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\pages\\Home.jsx",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\pages\\About.jsx",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\contacts\\Contacts.jsx",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\context\\contact\\ContactState.js",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\context\\contact\\contactContext.js",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\context\\contact\\contactReducer.js",["58"],"import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  CLEAR_FILTER,\r\n  // SET_CONTACT,\r\n  FILTER_TYPE,\r\n} from '../types';\r\n\r\nconst contactReducer = (state, action) => {\r\n  const { type, payload } = action || {};\r\n  switch (type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, payload],\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === payload.id ? payload : contact\r\n        ),\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter((contact) => contact.id !== payload),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_CONTACT: {\r\n      const { contactTypeSearch, searchText } = payload || {};\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const { name, email, phone, type } = contact || {};\r\n          return (\r\n            (name.includes(searchText) ||\r\n              email.includes(searchText) ||\r\n              phone.includes(searchText)) &&\r\n            type.includes(contactTypeSearch)\r\n          );\r\n        }),\r\n      };\r\n    }\r\n\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n","C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\context\\types.js",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\contacts\\ContactItem.jsx",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\contacts\\ContactForm.jsx",[],"C:\\Users\\suhail\\Documents\\React Dev\\contactkeeper\\client\\src\\components\\contacts\\ContactFilter.jsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":10,"column":3,"nodeType":"65","messageId":"66","endLine":10,"endColumn":14},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'FILTER_TYPE' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]